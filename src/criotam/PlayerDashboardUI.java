/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package criotam;

import criotam.actionbarfiles.CriotamUI;
import criotam.actionbarfiles.PlayerSearchUI;
import criotam.database.Sensordb;
import criotam.graph.GraphHandler;
import criotam.graph.GraphHandler1;
import criotam.graph.GraphHandler2;
import criotam.graph.GraphHandler3;
import criotam.graph.GraphHandler4;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;

/**
 *
 * @author AVINASH
 */
public class PlayerDashboardUI extends javax.swing.JFrame {

    
    public ResultSet playerInfo;
    
    public String playerID;
    
    public String[] resultID;
    
    public Sensordb exp1Sensordb;
    
    public String tableName;
    
    
    public GraphHandler graphHandler;
    
    public GraphHandler1 graphHandler1;
    
    public GraphHandler2 graphHandler2;
    
    public GraphHandler3 graphHandler3;
    
    public GraphHandler4 graphHandler4;
    
    
    public String exp1_lc_URI = "ws://localhost:8080/WebServer/loadCellStreaming";
    
    public String exp2_lc_URI = "ws://localhost:8080/WebServer/exp2loadcelllistener";
    
    public String exp2_emg_URI = "ws://localhost:8080/WebServer/exp2emglistener";
    
    public String exp3_fp_URI = "ws://localhost:8080/WebServer/exp3forceplatelistener";
    
    public String exp3_emg_URI = "ws://localhost:8080/WebServer/exp3emglistener";
    
    
    public String fileName_exp1_lc = "/criotam/csv/exp1/LoadCell/";
    
    public String fileName_exp2_lc = "/criotam/csv/exp2/LoadCell/";
    
    public String fileName_exp2_emg = "/criotam/csv/exp2/emg/";
    
    public String fileName_exp3_fp = "/criotam/csv/exp3/ForcePlate/";
    
    public String fileName_exp3_emg = "/criotam/csv/exp3/emg/";
    
    
    /**
     * Creates new form PlayerDashboardUI
     */
    public PlayerDashboardUI() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public PlayerDashboardUI(ResultSet playerInfo) throws SQLException {
        this.playerInfo = playerInfo;
        initComponents();
        this.setLocationRelativeTo(null);
        setPlayerInfo();
        
        getMyDocumentsDirectory();
    }

    public void setPlayerInfo() throws SQLException{
        if(playerInfo!=null){
            System.out.println("valid resultset");
            exp1_info_name.setText(playerInfo.getString("playername"));
            exp1_info_playerID.setText(playerInfo.getString("playerid"));
            exp1_info_age.setText("Age "+playerInfo.getString("age"));
            exp1_info_weight.setText("Weight "+playerInfo.getString("weight"));
            exp1_info_height.setText("Height "+ playerInfo.getString("height"));
            exp1_info_sex.setText("Sex "+playerInfo.getString("sex"));
            
            playerID = playerInfo.getString("playerid");
                    
        }else{
            System.out.println("null resultset");
        }
    }
    
    public void getMyDocumentsDirectory(){
        
        String myDocuments = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
        System.out.println(myDocuments);
         
        fileName_exp1_lc = myDocuments + fileName_exp1_lc;
        fileName_exp2_lc = myDocuments + fileName_exp2_lc;
        fileName_exp2_emg = myDocuments + fileName_exp2_emg;
        fileName_exp3_fp = myDocuments + fileName_exp3_fp;
        fileName_exp3_emg = myDocuments + fileName_exp3_emg;
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel2 = new javax.swing.JPanel();
        jDialog = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        stop = new javax.swing.JButton();
        exp1_ok = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        exp2_lc_start = new javax.swing.JButton();
        exp2_lc_stop = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        exp2_emg_start = new javax.swing.JButton();
        exp2_emg_stop = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        exp2_history_menu = new javax.swing.JComboBox<>();
        exp2_ok = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        exp3_fp_start = new javax.swing.JButton();
        exp3_fp_stop = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        exp3_emg_start = new javax.swing.JButton();
        exp3_emg_stop = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        exp3_history_menu = new javax.swing.JComboBox<>();
        exp3_ok = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        exp1_info_name = new javax.swing.JLabel();
        exp1_info_playerID = new javax.swing.JLabel();
        exp1_info_age = new javax.swing.JLabel();
        exp1_info_weight = new javax.swing.JLabel();
        exp1_info_height = new javax.swing.JLabel();
        exp1_info_sex = new javax.swing.JLabel();
        ActionBar = new javax.swing.JPanel();
        selectplayer = new javax.swing.JLabel();
        newplayer = new javax.swing.JLabel();
        live = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialogLayout = new javax.swing.GroupLayout(jDialog.getContentPane());
        jDialog.getContentPane().setLayout(jDialogLayout);
        jDialogLayout.setHorizontalGroup(
            jDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialogLayout.setVerticalGroup(
            jDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 0));

        jTabbedPane1.setBackground(new java.awt.Color(255, 102, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Start Load Cells Recording");

        start.setBackground(new java.awt.Color(255, 255, 255));
        start.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("View History");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jComboBox1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Force", "Moment", "Acceleration", "Velocity", "Raw Sensor Data" }));
        jComboBox1.setSelectedIndex(0);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        stop.setBackground(new java.awt.Color(255, 255, 255));
        stop.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        stop.setText("STOP");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        exp1_ok.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exp1_ok.setText("Ok");
        exp1_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp1_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(start)
                        .addGap(18, 18, 18)
                        .addComponent(stop))
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exp1_ok)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(stop))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exp1_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Experiment1", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Start Load Cells Recording");

        exp2_lc_start.setBackground(new java.awt.Color(255, 255, 255));
        exp2_lc_start.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp2_lc_start.setText("START");
        exp2_lc_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_lc_startActionPerformed(evt);
            }
        });

        exp2_lc_stop.setBackground(new java.awt.Color(255, 255, 255));
        exp2_lc_stop.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp2_lc_stop.setText("STOP");
        exp2_lc_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_lc_stopActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setText("Start EMG Recording");

        exp2_emg_start.setBackground(new java.awt.Color(255, 255, 255));
        exp2_emg_start.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp2_emg_start.setText("START");
        exp2_emg_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_emg_startActionPerformed(evt);
            }
        });

        exp2_emg_stop.setBackground(new java.awt.Color(255, 255, 255));
        exp2_emg_stop.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp2_emg_stop.setText("STOP");
        exp2_emg_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_emg_stopActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("View History");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        exp2_history_menu.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exp2_history_menu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Force", "Moment", "Acceleration", "Velocity", "Raw Sensor Data" }));
        jComboBox1.setSelectedIndex(0);
        exp2_history_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_history_menuActionPerformed(evt);
            }
        });

        exp2_ok.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exp2_ok.setText("Ok");
        exp2_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp2_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(exp2_history_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exp2_ok))
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(exp2_lc_start)
                        .addGap(18, 18, 18)
                        .addComponent(exp2_lc_stop))
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(exp2_emg_start)
                        .addGap(18, 18, 18)
                        .addComponent(exp2_emg_stop)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp2_lc_stop)
                    .addComponent(exp2_lc_start))
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp2_emg_stop)
                    .addComponent(exp2_emg_start))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exp2_history_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exp2_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Experiment2", jPanel3);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel10.setText("Start Force Plate Recording");

        exp3_fp_start.setBackground(new java.awt.Color(255, 255, 255));
        exp3_fp_start.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp3_fp_start.setText("START");
        exp3_fp_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_fp_startActionPerformed(evt);
            }
        });

        exp3_fp_stop.setBackground(new java.awt.Color(255, 255, 255));
        exp3_fp_stop.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp3_fp_stop.setText("STOP");
        exp3_fp_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_fp_stopActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel11.setText("Start EMG Recording");

        exp3_emg_start.setBackground(new java.awt.Color(255, 255, 255));
        exp3_emg_start.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp3_emg_start.setText("START");
        exp3_emg_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_emg_startActionPerformed(evt);
            }
        });

        exp3_emg_stop.setBackground(new java.awt.Color(255, 255, 255));
        exp3_emg_stop.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp3_emg_stop.setText("STOP");
        exp3_emg_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_emg_stopActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("View History");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        exp3_history_menu.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exp3_history_menu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Force", "Moment", "Acceleration", "Velocity", "Raw Sensor Data" }));
        jComboBox1.setSelectedIndex(0);
        exp3_history_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_history_menuActionPerformed(evt);
            }
        });

        exp3_ok.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exp3_ok.setText("Ok");
        exp3_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exp3_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(exp3_history_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(exp3_ok))
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(exp3_fp_start)
                        .addGap(18, 18, 18)
                        .addComponent(exp3_fp_stop))
                    .addComponent(jLabel10)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(exp3_emg_start)
                        .addGap(18, 18, 18)
                        .addComponent(exp3_emg_stop)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp3_fp_stop)
                    .addComponent(exp3_fp_start))
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp3_emg_stop)
                    .addComponent(exp3_emg_start))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exp3_history_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exp3_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Experiment3", jPanel7);

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Player Info");

        exp1_info_name.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_name.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_name.setText("Name");

        exp1_info_playerID.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_playerID.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_playerID.setText("Player ID");

        exp1_info_age.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_age.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_age.setText("Age");

        exp1_info_weight.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_weight.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_weight.setText("Weight");

        exp1_info_height.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_height.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_height.setText("Height");

        exp1_info_sex.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        exp1_info_sex.setForeground(new java.awt.Color(255, 255, 255));
        exp1_info_sex.setText("Sex");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(exp1_info_name))
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exp1_info_playerID)
                            .addComponent(exp1_info_age)
                            .addComponent(exp1_info_weight)
                            .addComponent(exp1_info_height)
                            .addComponent(exp1_info_sex))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exp1_info_name)
                .addGap(18, 18, 18)
                .addComponent(exp1_info_playerID)
                .addGap(18, 18, 18)
                .addComponent(exp1_info_age)
                .addGap(18, 18, 18)
                .addComponent(exp1_info_weight)
                .addGap(18, 18, 18)
                .addComponent(exp1_info_height)
                .addGap(18, 18, 18)
                .addComponent(exp1_info_sex)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ActionBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        selectplayer.setText("Select Player");
        selectplayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectplayerMouseClicked(evt);
            }
        });

        newplayer.setText("New Player");
        newplayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newplayerMouseClicked(evt);
            }
        });

        live.setText("Live");

        javax.swing.GroupLayout ActionBarLayout = new javax.swing.GroupLayout(ActionBar);
        ActionBar.setLayout(ActionBarLayout);
        ActionBarLayout.setHorizontalGroup(
            ActionBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectplayer)
                .addGap(18, 18, 18)
                .addComponent(newplayer)
                .addGap(18, 18, 18)
                .addComponent(live)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ActionBarLayout.setVerticalGroup(
            ActionBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActionBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ActionBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectplayer)
                    .addComponent(newplayer)
                    .addComponent(live))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
            .addComponent(ActionBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ActionBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        if(graphHandler == null){//TODO: check for existing opened window
          tableName = "exp1_"+playerID+"_lc";
          graphHandler = new GraphHandler(fileName_exp1_lc, playerID, 
                  tableName, exp1_lc_URI, 4, "identifier_exp1lc");
          graphHandler.start();
        }else if(graphHandler.isClosed()){
          tableName = "exp1_"+playerID+"_lc";
          graphHandler = new GraphHandler(fileName_exp1_lc, playerID, 
                  tableName, exp1_lc_URI, 4, "identifier_exp1lc");
          graphHandler.start();
        }else{
            infoBox("Recording already started!");
        }
    }//GEN-LAST:event_startActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        graphHandler.close();
    }//GEN-LAST:event_stopActionPerformed

    
    private void exp1_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp1_okActionPerformed
       //jComboBox1.getSelectedIndex()==4
        fileChooser.setCurrentDirectory(new File(fileName_exp1_lc));
        
        int returnVal = fileChooser.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
 
            File file = fileChooser.getSelectedFile();
            {
                try {
                    System.out.println(file.getAbsolutePath()+"");
                    
                    displayGraph(file.getAbsolutePath()+"");
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } 
        } else{
            System.out.println("File access cancelled by user.");
        }
    
    }//GEN-LAST:event_exp1_okActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void exp2_lc_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_lc_startActionPerformed
        // TODO add your handling code here:
        if(graphHandler1 == null){
            tableName = "exp2_"+playerID+"_lc";
            graphHandler1 = new GraphHandler1(fileName_exp2_lc, playerID, 
                    tableName, exp2_lc_URI, 4, "identifier_exp2lc");
            graphHandler1.start();
        }else if(graphHandler1.isClosed()){
            tableName = "exp2_"+playerID+"_lc";
            graphHandler1 = new GraphHandler1(fileName_exp2_lc, playerID, 
                    tableName, exp2_lc_URI, 4, "identifier_exp2lc");
            graphHandler1.start();
        }else{
            infoBox("Recording already started!");
        }
    }//GEN-LAST:event_exp2_lc_startActionPerformed

    private void exp2_lc_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_lc_stopActionPerformed
        // TODO add your handling code here:
        graphHandler1.close();
    }//GEN-LAST:event_exp2_lc_stopActionPerformed

    private void exp2_emg_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_emg_startActionPerformed
        // TODO add your handling code here:
        if(graphHandler2 == null){
            tableName = "exp2_"+playerID+"_emg";
            graphHandler2 = new GraphHandler2(fileName_exp2_emg, playerID,
                    tableName, exp2_emg_URI, 1, "identifier_exp2emg");
            graphHandler2.start();
        }else if(graphHandler2.isClosed()){
            tableName = "exp2_"+playerID+"_emg";
            graphHandler2 = new GraphHandler2(fileName_exp2_emg, playerID, 
                    tableName, exp2_emg_URI, 1, "identifier_exp2emg");
            graphHandler2.start();
        }else{
            infoBox("Recording already started!");
        }
    }//GEN-LAST:event_exp2_emg_startActionPerformed

    private void exp2_emg_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_emg_stopActionPerformed
        // TODO add your handling code here:
        graphHandler2.close();
    }//GEN-LAST:event_exp2_emg_stopActionPerformed

    private void exp2_history_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_history_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exp2_history_menuActionPerformed

    private void exp2_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp2_okActionPerformed
        // TODO add your handling code here:
        fileChooser.setCurrentDirectory(new File(fileName_exp2_emg));
        
        int returnVal = fileChooser.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
 
            File file = fileChooser.getSelectedFile();
            {
                try {
                    System.out.println(file.getAbsolutePath()+"");
                    
                    displayGraph(file.getAbsolutePath()+"");
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } 
        } else{
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_exp2_okActionPerformed

    private void exp3_fp_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_fp_startActionPerformed
        // TODO add your handling code here:
        if(graphHandler3 == null){
            tableName = "exp3_"+playerID+"_fp";
            graphHandler3 = new GraphHandler3(fileName_exp3_fp, playerID, 
                    tableName, exp3_fp_URI, 3, "identifier_exp3fp");
            graphHandler3.start();
        }else if(graphHandler3.isClosed()){
            tableName = "exp3_"+playerID+"_fp";
            graphHandler3 = new GraphHandler3(fileName_exp3_fp, playerID, 
                    tableName, exp3_fp_URI, 3, "identifier_exp3fp");
            graphHandler3.start();
        }else{
            infoBox("Recording already started!");
        }
    }//GEN-LAST:event_exp3_fp_startActionPerformed

    private void exp3_fp_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_fp_stopActionPerformed
        // TODO add your handling code here:
        graphHandler3.close();
    }//GEN-LAST:event_exp3_fp_stopActionPerformed

    private void exp3_emg_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_emg_startActionPerformed
        // TODO add your handling code here:
        if(graphHandler4 == null){
            tableName = "exp3_"+playerID+"_emg";
            graphHandler4 = new GraphHandler4(fileName_exp3_emg, playerID,
                    tableName, exp3_emg_URI, 1, "identifier_exp3emg");
            graphHandler4.start();
        }else if(graphHandler4.isClosed()){
            tableName = "exp3_"+playerID+"_emg";
            graphHandler4 = new GraphHandler4(fileName_exp3_emg, playerID,
                    tableName, exp3_emg_URI, 1, "identifier_exp3emg");
            graphHandler4.start();
        }else{
            infoBox("Recording already started!");
        }  
    }//GEN-LAST:event_exp3_emg_startActionPerformed

    private void exp3_emg_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_emg_stopActionPerformed
        // TODO add your handling code here:
        graphHandler4.close();
    }//GEN-LAST:event_exp3_emg_stopActionPerformed

    private void exp3_history_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_history_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exp3_history_menuActionPerformed

    private void exp3_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exp3_okActionPerformed
        // TODO add your handling code here:
        fileChooser.setCurrentDirectory(new File(fileName_exp3_fp));
        
        int returnVal = fileChooser.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
 
            File file = fileChooser.getSelectedFile();
            {
                try {
                    System.out.println(file.getAbsolutePath()+"");
                    
                    displayGraph(file.getAbsolutePath()+"");
                    
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } 
        } else{
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_exp3_okActionPerformed

    private void selectplayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectplayerMouseClicked
        // TODO add your handling code here:
        new PlayerSearchUI().setVisible(true);
    }//GEN-LAST:event_selectplayerMouseClicked

    private void newplayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newplayerMouseClicked
        // TODO add your handling code here:
        new CriotamUI().setVisible(true);
    }//GEN-LAST:event_newplayerMouseClicked

    //for exp1
    public void showExp1RawSensorHistory() throws SQLException{
        exp1Sensordb = new Sensordb(tableName);
        ResultSet rs = exp1Sensordb.getRawSensorFileNames(tableName);
        if(rs == null){
            infoBox("No History Data available!");
        }else
            showPopUpMenu(rs, "fileName");
    }
    
    public void showPopUpMenu(ResultSet rs, String coloumn) throws SQLException{
        
        DefaultListModel<String> model = new DefaultListModel<>();
        JList list = new JList(model);
        
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setViewportView(list);
        
        while(rs.next()){
            model.addElement(rs.getString(coloumn));
        }
        
        CustomDialog dialog = new CustomDialog("Choose file: ", list);
        dialog.setOnOk(e -> {
            try {
                displayGraph(dialog.getSelectedItem().toString().trim()+"");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        });
        dialog.show();
        
    }
    
    public void infoBox(String message)
    {
        JOptionPane.showMessageDialog(null, message,
                "Error " + "", JOptionPane.INFORMATION_MESSAGE);
        
    }
    
    public void displayGraph(String fileName) throws Exception{
        
        new ReadCsvFile(fileName);
        
    } 
  
    /*
    TestServer testServer ;
    
    class ServerHandler extends Thread {
        
        @Override
        public void run(){
                testServer = new TestServer();
                try {
                    testServer.main(new String[]{playerInfo.getString("playerid")});
                } catch (IOException ex) {
                    ex.printStackTrace();
            } catch (SQLException ex) {
                ex.printStackTrace();
            } 
        }
    }
    */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerDashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerDashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerDashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerDashboardUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerDashboardUI().setVisible(true);
            }
        });
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ActionBar;
    private javax.swing.JLabel exp1_info_age;
    private javax.swing.JLabel exp1_info_height;
    private javax.swing.JLabel exp1_info_name;
    private javax.swing.JLabel exp1_info_playerID;
    private javax.swing.JLabel exp1_info_sex;
    private javax.swing.JLabel exp1_info_weight;
    private javax.swing.JButton exp1_ok;
    private javax.swing.JButton exp2_emg_start;
    private javax.swing.JButton exp2_emg_stop;
    private javax.swing.JComboBox<String> exp2_history_menu;
    private javax.swing.JButton exp2_lc_start;
    private javax.swing.JButton exp2_lc_stop;
    private javax.swing.JButton exp2_ok;
    private javax.swing.JButton exp3_emg_start;
    private javax.swing.JButton exp3_emg_stop;
    private javax.swing.JButton exp3_fp_start;
    private javax.swing.JButton exp3_fp_stop;
    private javax.swing.JComboBox<String> exp3_history_menu;
    private javax.swing.JButton exp3_ok;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel live;
    private javax.swing.JLabel newplayer;
    private javax.swing.JLabel selectplayer;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
